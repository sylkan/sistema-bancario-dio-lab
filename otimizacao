from funcoes_usuario import criar_usuario, criar_conta_corrente

# Variáveis para armazenar dados do usuário e conta
usuario_logado = None
conta_corrente = None

# Função para inicializar o sistema
def iniciar_sistema():
  global usuario_logado, conta_corrente

  while True:
    opcao_menu_principal = input("""
    [c] Cadastrar usuário
    [l] Login
    [s] Sair

    => """)

    if opcao_menu_principal == "c":
      # Cadastrar novo usuário
      nome = input("Informe seu nome completo: ")
      cpf = input("Informe seu CPF (apenas números): ")
      senha = input("Defina sua senha: ")

      dados_usuario = criar_usuario(nome, cpf, senha)

      if "erro" in dados_usuario:
        print(dados_usuario["erro"])
      else:
        print("Usuário cadastrado com sucesso!")

    elif opcao_menu_principal == "l":
      # Login de usuário
      cpf = input("Informe seu CPF: ")
      senha = input("Informe sua senha: ")

      # Validar login no banco de dados
      # ... (implementar lógica de autenticação)

      if usuario_autenticado:
        usuario_logado = dados_usuario
        # Obter dados da conta corrente do usuário
        # ... (implementar lógica de consulta ao banco de dados)
        conta_corrente = dados_conta

        print("Login efetuado com sucesso!")
        # Entrar no loop principal do sistema bancário
        break  # Sair do menu principal
      else:
        print("CPF ou senha inválidos.")

    elif opcao_menu_principal == "s":
      print("Obrigado por usar o nosso sistema bancário!")
      break  # Sair do programa

    else:
      print("Opção inválida. Tente novamente.")

# Função para realizar operações bancárias
def menu_operacoes_bancarias():
  global saldo, limite, extrato, numero_saques

  while True:
    menu = """

    [d] Depositar
    [s] Sacar
    [e] Extrato
    [q] Sair

    => """

    opcao = input(menu)

    if opcao == "d":
      valor = float(input("Informe o valor do depósito: "))

      if valor > 0:
        saldo += valor
        extrato += f"Depósito: R$ {valor:.2f}\n"
      else:
        print("Operação falhou! O valor informado é inválido.")

    elif opcao == "s":
      valor = float(input("Informe o valor do saque: "))

      excedeu_saldo = valor > saldo
      excedeu_limite = valor > limite
      excedeu_saques = numero_saques >= LIMITE_SAQUES

      if excedeu_saldo:
        print("Operação falhou! Você não tem saldo suficiente.")
      elif excedeu_limite:
        print("Operação falhou! O valor do saque excede o limite.")
      elif excedeu_saques:
        print("Operação falhou! Número máximo de saques excedido.")
      elif valor > 0:
        saldo -= valor
        extrato += f"Saque: R$ {valor:.2f}\n"
        numero_saques += 1
      else:
        print("Operação falhou! O valor informado é inválido.")

    elif opcao == "e":
      print("\n================ EXTRATO ================")
      print("Não foram realizadas movimentações." if not extrato else extrato)
      print(f"\nSaldo: R$ {saldo:.2f}")
      print("==========================================")

    elif opcao == "q":
      print("Voltando ao menu principal...")
      break  # Sair do menu de operações bancárias

    else:
      print("Operação inválida. Tente novamente.")

# Iniciar o sistema
iniciar_sistema()

# Loop principal do sistema bancário
while usuario_logado:
  menu_operacoes_bancarias()
